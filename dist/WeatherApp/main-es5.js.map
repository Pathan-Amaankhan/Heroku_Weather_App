{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/panel/panel.component.ts","webpack:///src/app/panel/panel.component.html","webpack:///src/app/panel/choose-city-dialog.component.html","webpack:///src/app/panel/error-dialog.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","http","updates","title","available","subscribe","event","activateUpdate","document","location","reload","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","imports","providers","bootstrap","MainComponent","listOfPanels","push","console","log","pop","onRemoveClick","onAddClick","PanelComponent","dialog","url","apiKey","weatherInfo","undefined","cityName","city","isNotUpdating","get","concat","res","fetchInfoFromData","error","openErrorDialog","getWeatherData","data","name","humidity","main","currentTemp","temp","toFixed","minTemp","temp_min","maxTemp","temp_max","feelsLike","feels_like","iconOfWeather","weather","icon","updateTypeOfWeather","typeOfWeather","subscription","unsubscribe","dialogRef","open","ChooseCityDialogComponent","afterClosed","result","updateBroadcast","tryToUpdate","ErrorDialogComponent","close","onNoClick","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport {SwUpdate} from '@angular/service-worker';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'WeatherApp';\r\n\r\n  constructor(private http: HttpClient, updates: SwUpdate) {\r\n    updates.available.subscribe(event => {\r\n      updates.activateUpdate().then(() => {\r\n        document.location.reload();\r\n      });\r\n    });\r\n  }\r\n}\r\n","<app-main></app-main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport {ChooseCityDialogComponent, ErrorDialogComponent, PanelComponent} from './panel/panel.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    PanelComponent,\r\n    ChooseCityDialogComponent,\r\n    ErrorDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {PanelComponent} from '../panel/panel.component';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  listOfPanels: number[] = [1];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n  onAddClick() {\r\n    this.listOfPanels.push(1);\r\n    console.log(this.listOfPanels);\r\n  }\r\n\r\n  onRemoveClick() {\r\n    this.listOfPanels.pop();\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-wrap overflow-auto h-100\">\r\n  <div class=\"flex-fill\" *ngFor=\"let panelId of listOfPanels\">\r\n    <app-panel></app-panel>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"add-remove-btns\">\r\n  <button mat-fab (click)=\"onRemoveClick()\">\r\n    <mat-icon>remove</mat-icon>\r\n  </button>\r\n\r\n  <button mat-fab (click)=\"onAddClick()\" color=\"primary\">\r\n    <mat-icon>add</mat-icon>\r\n  </button>\r\n</div>\r\n","import {Component, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {interval, Observable, Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.css']\r\n})\r\nexport class PanelComponent implements OnInit {\r\n\r\n  url = 'https://api.openweathermap.org/data/2.5/weather?';\r\n  apiKey = 'a44224604925b3f23115c403c8e9c7c0';\r\n  weatherInfo = undefined;\r\n  cityName = '';\r\n  typeOfWeather: string;\r\n  subscription: Subscription;\r\n\r\n  constructor(private http: HttpClient, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  getWeatherData(city: string, apiKey: string, isNotUpdating: boolean) {\r\n    this.http.get(this.url.concat(`q=${city}&appid=${apiKey}`)).subscribe(res => {\r\n      this.fetchInfoFromData(res);\r\n    }, error => {\r\n      if (isNotUpdating) {\r\n        this.openErrorDialog();\r\n      }\r\n      // console.clear();\r\n    });\r\n  }\r\n\r\n  tryToUpdate() {\r\n    if (this.weatherInfo !== undefined) {\r\n      try{\r\n        this.getWeatherData(this.cityName, this.apiKey, false);\r\n      } catch (e) {\r\n        console.log(e);\r\n        // console.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchInfoFromData(data) {\r\n    this.weatherInfo = {};\r\n    this.weatherInfo.cityName = data.name;\r\n    this.weatherInfo.humidity = data.main.humidity;\r\n    this.weatherInfo.currentTemp = (data.main.temp - 273.15).toFixed(0);\r\n    this.weatherInfo.minTemp = (data.main.temp_min - 273.15).toFixed(0);\r\n    this.weatherInfo.maxTemp = (data.main.temp_max - 273.15).toFixed(0);\r\n    this.weatherInfo.feelsLike = (data.main.feels_like - 273.15).toFixed(0);\r\n    this.weatherInfo.iconOfWeather = data.weather[0].icon;\r\n    this.updateTypeOfWeather(this.weatherInfo.iconOfWeather);\r\n  }\r\n\r\n  updateTypeOfWeather(iconOfWeather: string) {\r\n    if (iconOfWeather === '01d' || iconOfWeather === '01n') {\r\n      this.typeOfWeather = 'Sunny';\r\n      return;\r\n    }\r\n    if (iconOfWeather === '02d' || iconOfWeather === '03d' || iconOfWeather === '04d' || iconOfWeather === '04n') {\r\n      this.typeOfWeather = 'Cloudy';\r\n      return;\r\n    }\r\n    if (iconOfWeather === '09d' || iconOfWeather === '09n' || iconOfWeather === '10d'\r\n      || iconOfWeather === '10n' || iconOfWeather === '11d' || iconOfWeather === '11n') {\r\n      this.typeOfWeather = 'Rainy';\r\n      return;\r\n    }\r\n    if (iconOfWeather === '50d' || iconOfWeather === '50n') {\r\n      this.typeOfWeather = 'Windy';\r\n      return;\r\n    }\r\n    this.typeOfWeather = 'Unknown';\r\n  }\r\n\r\n  closeClicked() {\r\n    this.subscription.unsubscribe();\r\n    this.weatherInfo = undefined;\r\n    this.cityName = '';\r\n  }\r\n\r\n  openChooseCityDialog() {\r\n    const dialogRef = this.dialog.open(ChooseCityDialogComponent, {\r\n      data: this.cityName\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      try{\r\n        this.getWeatherData(result, this.apiKey, true);\r\n        this.cityName = result;\r\n        const updateBroadcast = interval(20000);\r\n        this.subscription = updateBroadcast.subscribe(res => {\r\n          this.tryToUpdate();\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n        // console.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  openErrorDialog() {\r\n    this.dialog.open(ErrorDialogComponent);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-choose-city-dialog',\r\n  templateUrl: './choose-city-dialog.component.html',\r\n})\r\nexport class ChooseCityDialogComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ChooseCityDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: string) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-error-dialog',\r\n  templateUrl: './error-dialog.component.html',\r\n})\r\nexport class ErrorDialogComponent {}\r\n","<span *ngIf=\"weatherInfo==undefined; else displayPanel\">\r\n  <button class=\"btn btn-dark m-2\" (click)=\"openChooseCityDialog()\"> Choose </button>\r\n</span>\r\n\r\n<ng-template #displayPanel>\r\n  <mat-card class=\"panel-size bg-dark text-white m-2 rounded-lg\">\r\n\r\n    <mat-card-header>\r\n        <div *ngIf=\"typeOfWeather\" mat-card-avatar class=\"glow-the-{{typeOfWeather}}\">\r\n          <img *ngIf=\"typeOfWeather\" src=\"/assets/images/{{typeOfWeather}}.svg\" alt=\"sun\">\r\n        </div>\r\n\r\n        <mat-card-title>{{weatherInfo['cityName']}}</mat-card-title>\r\n\r\n        <mat-card-subtitle class=\"text-white\">Temperature(In &#176;C)</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n\r\n    <mat-card-content class=\"text-center\">\r\n      <div class=\"font-weight-bolder display-3\">&nbsp;{{weatherInfo['currentTemp']}}&#176;</div>\r\n      <div class=\"h4\">{{weatherInfo['minTemp']}}&#176;/ {{weatherInfo['maxTemp']}}&#176;</div>\r\n      <div class=\"increase-font-2 p-2\">{{typeOfWeather}}</div>\r\n      <div class=\"font-weight-bolder increase-font-1 p-2\">Feels Like: {{weatherInfo['feelsLike']}}&#176;</div>\r\n      <div class=\"increase-font-1 font-weight-bolder\">Humidity: {{weatherInfo['humidity']}}%</div>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions class=\"text-center\">\r\n      <button mat-button class=\"w-25 text-center\" (click)=\"openChooseCityDialog()\">Change</button>\r\n      <button mat-button class=\"w-25\" (click)=\"closeClicked()\">Close</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</ng-template>\r\n\r\n","<h1 mat-dialog-title style=\"width: 200px\">City: {{data}}</h1>\r\n<div mat-dialog-content>\r\n  <p>Give The City Name...</p>\r\n  <mat-form-field style=\"width: 200px;\">\r\n    <mat-label>City Name</mat-label>\r\n    <input matInput [(ngModel)]=\"data\">\r\n    <button mat-button *ngIf=\"data\" matSuffix mat-icon-button (click)=\"data=''\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-form-field>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"data\">Ok</button>\r\n</div>\r\n","<h1 mat-dialog-title class=\"mat-error\">ERROR</h1>\r\n<div mat-dialog-content>Please type a valid city name.</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}